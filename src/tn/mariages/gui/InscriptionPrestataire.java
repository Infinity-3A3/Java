/*
 * Copyright (C) 2014 Karim
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package tn.mariages.gui;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.UIManager;
import tn.mariages.dao.PrestataireDAO;
import tn.mariages.dao.ClientDAO;
import tn.mariages.dao.AdminDAO;
import tn.mariages.entities.Prestataire;
/**
 *
 * @author Karim
 */
public class InscriptionPrestataire extends javax.swing.JFrame {
Prestataire prest = new Prestataire();
    PrestataireDAO presDAO = new PrestataireDAO();
    String[] specialite = {"--Choisir specialité--"};
    String[] categorie = {"--Choisir catégorie--", "La mariée", "le mari", "Beauté", "La réception", "Gastronomie", "Annimation", "Voyages", "Photographe"};
    String[] ville = {"--Choisir ville--", "tunis", "arriana", "hammamet", "Sousse", "Carthage", "Mannouba"};
    String[] specialitMari = {"--Choisir spécialité--", "Costume", "Chaussure"};
    String[] specialitMariee = {"--Choisir spécialité--", "Robe marriée", "Haute couture", "Lingerie", "Bijoutier"};
    String[] specialitBeaute = {"--Choisir spécialité--", "Produit esthétique", "Maquillage Pro", "Sallon d'ethetique"};
    String[] specialitRecept = {"--Choisir spécialité--", "Forum", "Top happiness", "Le relais"};
    String[] specialitGastr = {"--Choisir spécialité--", "Traiteur", "Patisserie"};
    String[] specialitAnnim = {"--Choisir spécialité--", "Troupe musical", "Chanteurs", "Danseuse orientals"};
    String[] specialitVoyage = {"--Choisir spécialité--", "Agence de voyage"};
    String[] specialitPhotographe = {"--Choisir spécialité--", "Photographe paysagiste", "photographe classique"};
    /**
     * Creates new form InscriptionPrestataire
     */
    public InscriptionPrestataire() {
        try
    {
        org.jb2011.lnf.beautyeye.BeautyEyeLNFHelper.launchBeautyEyeLNF();
            UIManager.put("RootPane.setupButtonVisible", false);

    }
    catch(Exception e)
    {
        //TODO exception
    }
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
         erreurAdresse.setVisible(false);
      erreurCategorie.setVisible(false);
      erreurEmail.setVisible(false);
      erreurMdp.setVisible(false);
      erreurMdp1.setVisible(false);
      erreurNom.setVisible(false);
      erreurSpec.setVisible(false);
      erreurville.setVisible(false);
      
      erreurDesc.setVisible(false);
      jLabel1.setVisible(false);
      jLabel16.setVisible(false);
      jLabel14.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jtNomPrest = new javax.swing.JTextField();
        jtAdrPrest = new javax.swing.JTextField();
        jtNumMobilPrest = new javax.swing.JTextField();
        jtEmailPrest = new javax.swing.JTextField();
        cmbVillePrest = new javax.swing.JComboBox();
        btnInscri = new javax.swing.JButton();
        btnAnnulerPrest = new javax.swing.JButton();
        jtpwdPrest = new javax.swing.JPasswordField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtDescPrest = new javax.swing.JTextPane();
        jLabel11 = new javax.swing.JLabel();
        jtNumFixePrest = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jtImgPrest = new javax.swing.JTextField();
        btnParcourir = new javax.swing.JButton();
        cmbCategoriePrest = new javax.swing.JComboBox();
        cmbSpecialitePrest = new javax.swing.JComboBox();
        erreurNom = new javax.swing.JLabel();
        erreurEmail = new javax.swing.JLabel();
        erreurMdp = new javax.swing.JLabel();
        jtpwdPrest1 = new javax.swing.JPasswordField();
        jLabel15 = new javax.swing.JLabel();
        erreurMdp1 = new javax.swing.JLabel();
        erreurAdresse = new javax.swing.JLabel();
        erreurCategorie = new javax.swing.JLabel();
        erreurSpec = new javax.swing.JLabel();
        erreurville = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        erreurDesc = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Inscription", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 24))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setText("Nom:");

        jLabel3.setText("Description:");

        jLabel4.setText("Email:");

        jLabel5.setText("Mot de passe:");

        jLabel6.setText("Adresse:");

        jLabel7.setText("Num tel mobile:");

        jLabel8.setText("Catégorie:");

        jLabel9.setText("Spécialité:");

        jLabel10.setText("Ville:");

        btnInscri.setText("S'inscrire");
        btnInscri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInscriActionPerformed(evt);
            }
        });

        btnAnnulerPrest.setText("   Annuler");
        btnAnnulerPrest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnnulerPrestActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jtDescPrest);

        jLabel11.setText("Num tel fixe:");

        jLabel12.setText("Image:");

        btnParcourir.setText("Parcourir");
        btnParcourir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnParcourirActionPerformed(evt);
            }
        });

        cmbCategoriePrest.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCategoriePrestItemStateChanged(evt);
            }
        });
        cmbCategoriePrest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCategoriePrestActionPerformed(evt);
            }
        });

        erreurNom.setForeground(new java.awt.Color(255, 0, 0));
        erreurNom.setText("Ce champs ne peut pas etre vide");

        erreurEmail.setForeground(new java.awt.Color(255, 0, 0));
        erreurEmail.setText("Ce champs ne peut pas etre vide");

        erreurMdp.setForeground(new java.awt.Color(255, 0, 0));
        erreurMdp.setText("Ce champs ne peut pas etre vide");

        jLabel15.setText("Repetez mot de passe:");

        erreurMdp1.setForeground(new java.awt.Color(255, 0, 0));
        erreurMdp1.setText("Ce champs ne peut pas etre vide");

        erreurAdresse.setForeground(new java.awt.Color(255, 0, 0));
        erreurAdresse.setText("Ce champs ne peut pas etre vide");

        erreurCategorie.setForeground(new java.awt.Color(255, 0, 0));
        erreurCategorie.setText("Veuillez choisir une categorie");

        erreurSpec.setForeground(new java.awt.Color(255, 0, 0));
        erreurSpec.setText("Veuillez choisir une specialié");

        erreurville.setForeground(new java.awt.Color(255, 0, 0));
        erreurville.setText("Veuillez chosir la ville ou vous vous trouvez");

        jLabel1.setForeground(new java.awt.Color(245, 0, 0));
        jLabel1.setText("Ce champs ne peut pas etre vide");

        erreurDesc.setForeground(new java.awt.Color(255, 0, 0));
        erreurDesc.setText("Ce champs ne peut pas etre vide");

        jLabel14.setForeground(new java.awt.Color(255, 0, 0));
        jLabel14.setText("Ce champs ne peut pas etre vide");

        jLabel16.setForeground(new java.awt.Color(255, 0, 0));
        jLabel16.setText("Ce champs ne peut pas etre vide");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAnnulerPrest, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addComponent(erreurEmail)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel8)
                                    .addComponent(erreurCategorie)
                                    .addComponent(erreurSpec)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jtNomPrest, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                                                .addComponent(jtEmailPrest)
                                                .addComponent(jtpwdPrest))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(cmbSpecialitePrest, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(cmbCategoriePrest, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(cmbVillePrest, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGap(161, 161, 161))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jtAdrPrest, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jtpwdPrest1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(erreurAdresse)
                                    .addComponent(erreurNom)
                                    .addComponent(erreurMdp)
                                    .addComponent(erreurMdp1)
                                    .addComponent(erreurville))
                                .addGap(237, 237, 237)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel11)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jtNumFixePrest, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jtNumMobilPrest, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(erreurDesc)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel16))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel12))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jtImgPrest, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnParcourir, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(94, 94, 94)
                                        .addComponent(btnInscri, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jtImgPrest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12)
                                    .addComponent(btnParcourir)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jtNomPrest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(erreurNom)
                            .addComponent(jLabel1))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jtEmailPrest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addComponent(erreurEmail)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel5)
                                            .addComponent(jtpwdPrest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(3, 3, 3)
                                        .addComponent(erreurMdp))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(erreurDesc)))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel15)
                                    .addComponent(jtpwdPrest1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(erreurMdp1)
                                .addGap(3, 3, 3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jtNumMobilPrest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jtNumFixePrest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtAdrPrest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmbCategoriePrest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(erreurAdresse))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(erreurCategorie)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(cmbSpecialitePrest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(erreurSpec))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnInscri, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(cmbVillePrest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(erreurville)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(btnAnnulerPrest))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInscriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInscriActionPerformed
erreurAdresse.setVisible(false);
      erreurCategorie.setVisible(false);
      erreurEmail.setVisible(false);
      erreurMdp.setVisible(false);
      erreurMdp1.setVisible(false);
      erreurNom.setVisible(false);
      erreurSpec.setVisible(false);
      erreurville.setVisible(false);
       erreurDesc.setVisible(false);
      jLabel1.setVisible(false);
      jLabel16.setVisible(false);
      jLabel14.setVisible(false);
      
      ClientDAO clientDao=new ClientDAO();
      AdminDAO adminDAO=new AdminDAO();
        Pattern pattern2 = Pattern.compile("(?:\\w|[\\-_])+(?:\\.(?:\\w|[\\-_])+)*\\@(?:\\w|[\\-_])+(?:\\.(?:\\w|[\\-_])+)+" );
        Pattern pattern = Pattern.compile("^\\d+$");
        Matcher matcher3 = pattern2.matcher(jtEmailPrest.getText());
        Matcher matcher = pattern.matcher(jtNumFixePrest.getText());
        Matcher matcher2 = pattern.matcher(jtNumMobilPrest.getText());
        if(jtNomPrest.getText().equals("")|| jtDescPrest.getText().equals("")|| jtEmailPrest.getText().equals("") || jtpwdPrest.getText().equals("") || jtAdrPrest.getText().equals("") || cmbVillePrest.getSelectedItem().equals("--Choisir ville--")|| cmbSpecialitePrest.getSelectedItem().equals("--Choisir spécialité--")|| cmbCategoriePrest.getSelectedItem().equals("--Choisir catégorie--")||!matcher.matches()||!matcher2.matches()||!matcher3.matches()||clientDao.findClientByEmailBoolean(jtEmailPrest.getText())|| presDAO.findPrestByEmailBoolean(jtEmailPrest.getText())||adminDAO.findAdminByEmailBoolean(jtEmailPrest.getText())) 
    {
            String ch="";
            if(jtNomPrest.getText().equals(""))
            erreurNom.setVisible(true);

            if(jtDescPrest.getText().equals(""))
            erreurDesc.setVisible(true);
            if(jtAdrPrest.getText().equals(""))
            erreurAdresse.setVisible(true);
            if(cmbVillePrest.getSelectedItem().toString().equals("--Choisir ville--"))
            erreurville.setVisible(true);
            
            if(jtNumMobilPrest.getText().equals(""))
            {
            jLabel14.setText("Ce champs ne peut pas etre vide");
                jLabel14.setVisible(true);
                        
            }
            else if(!matcher2.matches())
           {
            jLabel14.setText("Le numero n'est pas valide");
                jLabel14.setVisible(true);
                        
            }
            
            if(jtNumFixePrest.getText().equals(""))
            {
            jLabel16.setText("Ce champs ne peut pas etre vide");
                jLabel16.setVisible(true);
                        
            }
            else if(!matcher.matches())
             {
            jLabel14.setText("Le numero n'est pas valide");
                jLabel14.setVisible(true);
                        
            }

            if(jtImgPrest.getText().equals(""))
            {
                
                jLabel1.setText("Veuillez donnez le chemin de votre image de profil");
                jLabel1.setVisible(true);
            }
            
            if(jtEmailPrest.getText().equals(""))
            {
                erreurEmail.setText("Ce champs ne peut pas etre vide");
                erreurEmail.setVisible(true);
            }
            else if(!matcher3.matches())
            {
             erreurEmail.setText("Veuillez entrez un email valide");
                 erreurEmail.setVisible(true);
            }
            else if(clientDao.findClientByEmailBoolean(jtEmailPrest.getText())|| presDAO.findPrestByEmailBoolean(jtEmailPrest.getText())||adminDAO.findAdminByEmailBoolean(jtEmailPrest.getText())) 
            {
                erreurEmail.setText("Cet email existe deja");
                 erreurEmail.setVisible(true);
                
            }
            
            
            if(jtNumMobilPrest.getText().equals(""))
            ch+="Veuillez donner le numero de telephone mobile du prestataire  \n";
           
            if(cmbCategoriePrest.getSelectedItem().toString().equals("--Choisir catégorie--"))
            erreurCategorie.setVisible(true);
            
            if(cmbSpecialitePrest.getSelectedItem().toString().equals("--Choisir specialité--") && cmbCategoriePrest.getSelectedItem().toString().equals("--Choisir catégorie--"))
            erreurSpec.setVisible(true);
         
          if(jtpwdPrest.getText().equals("")){
          erreurMdp.setText("Ce champs ne peut pas etre vide");
          erreurMdp.setVisible(true);
          }
          
            if(jtpwdPrest1.getText().equals("") && !jtpwdPrest.getText().equals("")){
          erreurMdp1.setText("Ce champs ne peut pas etre vide");
          erreurMdp1.setVisible(true);
          }else if(!jtpwdPrest1.getText().equals(jtpwdPrest.getText())){
          erreurMdp1.setText("Les mot de passes sont differents");
          erreurMdp1.setVisible(true);
          }

        }else{

             MessageDigest md = null;
    try {
        md = MessageDigest.getInstance("SHA-1");
    } catch (NoSuchAlgorithmException ex) {
        Logger.getLogger(InscriptionClient.class.getName()).log(Level.SEVERE, null, ex);
    }
        ByteArrayInputStream fis = new ByteArrayInputStream(jtpwdPrest.getText().getBytes());

        byte[] dataBytes = new byte[1024];

        int nread = 0; 
    try {
        while ((nread = fis.read(dataBytes)) != -1) {
            md.update(dataBytes, 0, nread);
        }
    } catch (IOException ex) {
        Logger.getLogger(InscriptionClient.class.getName()).log(Level.SEVERE, null, ex);
    }

        byte[] mdbytes = md.digest();

        //convert the byte to hex format method 1
        StringBuffer pwd1 = new StringBuffer();
        for (int i = 0; i < mdbytes.length; i++) {
          pwd1.append(Integer.toString((mdbytes[i] & 0xff) + 0x100, 16).substring(1));
        }
            
            
            prest.setNomPrest(jtNomPrest.getText());

            prest.setDescPrest(jtDescPrest.getText());

            prest.setAdrPrest(jtAdrPrest.getText());
            prest.setVillePrest(cmbVillePrest.getSelectedItem().toString());
            prest.setImgPrest(jtImgPrest.getText());
            prest.setEmailPrest(jtEmailPrest.getText());

            prest.setPwdPrest(pwd1.toString());
            prest.setCategorie(cmbCategoriePrest.getSelectedItem().toString());

          
            
           
            

          

            prest.setSpecialite(cmbSpecialitePrest.getSelectedItem().toString());

            prest.setTelMobilePrest(jtNumMobilPrest.getText());
            prest.setTelFixePrest(jtNumMobilPrest.getText());
            presDAO.insertPrestataire(prest);

            EspacePrest espace=new EspacePrest();
            espace.setVisible(true);
            
         
            this.dispose();
        }

    }//GEN-LAST:event_btnInscriActionPerformed

    private void btnParcourirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnParcourirActionPerformed
        String chemin="";

        JFileChooser fc = new JFileChooser();

        int retval = fc.showOpenDialog(null);

        if (retval == JFileChooser.APPROVE_OPTION) {

            chemin = fc.getSelectedFile().getAbsolutePath();
        }
    }//GEN-LAST:event_btnParcourirActionPerformed

    private void cmbCategoriePrestItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCategoriePrestItemStateChanged
 
        if (cmbCategoriePrest.getSelectedItem().toString().equals("La mariée")) {
            cmbSpecialitePrest.removeAllItems();
            for (int i = 0; i < specialitMariee.length; i++) {
                cmbSpecialitePrest.addItem(specialitMariee[i]);
            }
        }

        if (cmbCategoriePrest.getSelectedItem().toString().equals("le mari")) {
            cmbSpecialitePrest.removeAllItems();
            for (int i = 0; i < specialitMari.length; i++) {
                cmbSpecialitePrest.addItem(specialitMari[i]);
            }
        }



        if (cmbCategoriePrest.getSelectedItem().toString() == "Beauté") {
            cmbSpecialitePrest.removeAllItems();
            for (int i = 0; i < specialitBeaute.length; i++) {
                cmbSpecialitePrest.addItem(specialitBeaute[i]);
            }
        }

        if (cmbCategoriePrest.getSelectedItem().toString() == "La réception") {
            cmbSpecialitePrest.removeAllItems();
            for (int i = 0; i < specialitRecept.length; i++) {
                cmbSpecialitePrest.addItem(specialitRecept[i]);
            }
        }
        if (cmbCategoriePrest.getSelectedItem().toString() == "Gastronomie") {
            cmbSpecialitePrest.removeAllItems();
            for (int i = 0; i < specialitGastr.length; i++) {
                cmbSpecialitePrest.addItem(specialitGastr[i]);
            }
        }

        if (cmbCategoriePrest.getSelectedItem().toString() == "Annimation") {
            cmbSpecialitePrest.removeAllItems();
            for (int i = 0; i < specialitAnnim.length; i++) {
                cmbSpecialitePrest.addItem(specialitAnnim[i]);
            }
        }
        if (cmbCategoriePrest.getSelectedItem().toString() == "Voyages") {
            cmbSpecialitePrest.removeAllItems();
            for (int i = 0; i < specialitVoyage.length; i++) {
                cmbSpecialitePrest.addItem(specialitVoyage[i]);
            }
        }

        if (cmbCategoriePrest.getSelectedItem().toString() == "Photographe") {
            cmbSpecialitePrest.removeAllItems();
            for (int i = 0; i < specialitPhotographe.length; i++) {
                cmbSpecialitePrest.addItem(specialitPhotographe[i]);
            }
        }

    }//GEN-LAST:event_cmbCategoriePrestItemStateChanged

    private void cmbCategoriePrestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCategoriePrestActionPerformed

        if (cmbCategoriePrest.getSelectedItem().toString().equals("La mariée")) {
            cmbSpecialitePrest.removeAllItems();
            for (int i = 0; i < specialitMariee.length; i++) {
                cmbSpecialitePrest.addItem(specialitMariee[i]);
            }
        }

        if (cmbCategoriePrest.getSelectedItem().toString().equals("le mari")) {
            cmbSpecialitePrest.removeAllItems();
            for (int i = 0; i < specialitMari.length; i++) {
                cmbSpecialitePrest.addItem(specialitMari[i]);
            }
        }

        if (cmbCategoriePrest.getSelectedItem().toString() == "Beauté") {
            cmbSpecialitePrest.removeAllItems();
            for (int i = 0; i < specialitBeaute.length; i++) {
                cmbSpecialitePrest.addItem(specialitBeaute[i]);
            }
        }

        if (cmbCategoriePrest.getSelectedItem().toString() == "La réception") {
            cmbSpecialitePrest.removeAllItems();
            for (int i = 0; i < specialitRecept.length; i++) {
                cmbSpecialitePrest.addItem(specialitRecept[i]);
            }
        }
        if (cmbCategoriePrest.getSelectedItem().toString() == "Gastronomie") {
            cmbSpecialitePrest.removeAllItems();
            for (int i = 0; i < specialitGastr.length; i++) {
                cmbSpecialitePrest.addItem(specialitGastr[i]);
            }
        }

        if (cmbCategoriePrest.getSelectedItem().toString() == "Annimation") {
            cmbSpecialitePrest.removeAllItems();
            for (int i = 0; i < specialitAnnim.length; i++) {
                cmbSpecialitePrest.addItem(specialitAnnim[i]);
            }
        }
        if (cmbCategoriePrest.getSelectedItem().toString() == "Voyages") {
            cmbSpecialitePrest.removeAllItems();
            for (int i = 0; i < specialitVoyage.length; i++) {
                cmbSpecialitePrest.addItem(specialitVoyage[i]);
            }
        }

        if (cmbCategoriePrest.getSelectedItem().toString() == "Photographe") {
            cmbSpecialitePrest.removeAllItems();
            for (int i = 0; i < specialitPhotographe.length; i++) {
                cmbSpecialitePrest.addItem(specialitPhotographe[i]);
            }
        }

    }//GEN-LAST:event_cmbCategoriePrestActionPerformed

    private void btnAnnulerPrestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnnulerPrestActionPerformed
       Authentication auth =new Authentication();
auth.setVisible(true);
this.dispose();
    }//GEN-LAST:event_btnAnnulerPrestActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
     
        
        
        
        for (int i = 0; i < categorie.length; i++) {
            cmbCategoriePrest.addItem(categorie[i]);

        }

        for (int i = 0; i < ville.length; i++) {
            cmbVillePrest.addItem(ville[i]);
        }
        for (int i = 0; i < specialite.length; i++) {
            cmbSpecialitePrest.addItem(specialite[i]);

        }        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InscriptionPrestataire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InscriptionPrestataire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InscriptionPrestataire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InscriptionPrestataire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
     
     try
    {
        org.jb2011.lnf.beautyeye.BeautyEyeLNFHelper.launchBeautyEyeLNF();
    }
     catch(Exception e)
    {
        //TODO exception
    }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InscriptionPrestataire().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnnulerPrest;
    private javax.swing.JButton btnInscri;
    private javax.swing.JButton btnParcourir;
    private javax.swing.JComboBox cmbCategoriePrest;
    private javax.swing.JComboBox cmbSpecialitePrest;
    private javax.swing.JComboBox cmbVillePrest;
    private javax.swing.JLabel erreurAdresse;
    private javax.swing.JLabel erreurCategorie;
    private javax.swing.JLabel erreurDesc;
    private javax.swing.JLabel erreurEmail;
    private javax.swing.JLabel erreurMdp;
    private javax.swing.JLabel erreurMdp1;
    private javax.swing.JLabel erreurNom;
    private javax.swing.JLabel erreurSpec;
    private javax.swing.JLabel erreurville;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jtAdrPrest;
    private javax.swing.JTextPane jtDescPrest;
    private javax.swing.JTextField jtEmailPrest;
    private javax.swing.JTextField jtImgPrest;
    private javax.swing.JTextField jtNomPrest;
    private javax.swing.JTextField jtNumFixePrest;
    private javax.swing.JTextField jtNumMobilPrest;
    private javax.swing.JPasswordField jtpwdPrest;
    private javax.swing.JPasswordField jtpwdPrest1;
    // End of variables declaration//GEN-END:variables
}
